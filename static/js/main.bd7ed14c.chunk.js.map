{"version":3,"sources":["Flashcard.jsx","FlashcardList.jsx","App.jsx","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd7ed14c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nexport default function Flashcard( {flashcard} ) {\r\n    const [flip, setFlip] = useState(false)\r\n    const [height, setHeight] = useState('initial')\r\n\r\n    const frontEl = useRef()\r\n    const backEl = useRef() \r\n\r\n    function setMaxHeight() {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height\r\n        const backHeight = backEl.current.getBoundingClientRect().height\r\n        setHeight(Math.max(frontHeight, backHeight, 100))\r\n    }\r\n\r\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n  useEffect(() => {\r\n    window.addEventListener('resize', setMaxHeight)\r\n    return () => window.removeEventListener('resize', setMaxHeight)\r\n  }, [])\r\n\r\n\r\n    return (\r\n         <div\r\n         className={`card ${flip ? 'flip' : ''}`}\r\n         style={{ height: height }}\r\n         onClick={() => setFlip(!flip)}\r\n         >\r\n             <div className=\"front\" ref={frontEl}>\r\n                {flashcard.question}\r\n                <div className=\"flashcard-options\">\r\n                    {flashcard.options.map(option => {\r\n                         return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n                    })}\r\n                </div>\r\n             </div>\r\n             <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Flashcard from './Flashcard';\r\n\r\nexport default function FlashcardList({ flashcards }) {\r\n    return (\r\n    <div className = \"card-grid\"> \r\n    {flashcards.map(flashcard => {\r\n            return <Flashcard flashcard = { flashcard } key = {flashcard.id} />\r\n        })} \r\n        </div>\r\n        )\r\n}","import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios'\n\n\nfunction App() {\n    const [flashcards, setFlashcards] = useState([])\n    const [categories, setCategories] = useState([])\n\n    const categoryEl = useRef()\n    const amountEl = useRef()\n             \n    useEffect(() => {\n        axios\n        .get('https://opentdb.com/api_category.php')\n        .then(res => {\n            setCategories(res.data.trivia_categories)\n        })\n    }, [])\n\n\n\n\nfunction decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML= str\n    return textArea.value\n}\n\nfunction handleSubmit(e) {\n    e.preventDefault()\n    axios.get('https://opentdb.com/api.php', {\n        params: {\n            amount: amountEl.current.value,\n            category: categoryEl.current.value\n        }\n    })\n    .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer)\n            const options = [\n                ...questionItem.incorrect_answers.map(a => decodeString(a)\n                ),\n                 answer\n                ]\n            return {\n                id: `${index}-${Date.now()}`,\n                question: decodeString(questionItem.question),\n                answer: answer,\n                options: options.sort(() => Math.random() - .5)\n            }\n        }))\n        \n    })\n}\n\n    return (\n        <>\n        <form className=\"header\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <select id=\"category\" ref={categoryEl}>\n                    {categories.map(category => {\n                        return <option value={category.id} key={category.id}>{category.name}</option>\n                    })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"amount\">Number of Questions</label>\n                    <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn\">Generate</button>\n                    </div>\n        </form>\n<div className=\"container\">\n<FlashcardList flashcards={flashcards} />\n</div>\n    </>    \n    );\n}\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}